<apps version="2.0">
  <app keywords="psoc6,dps310,pressure,temperature,barometer,mtb-flow,xensiv" req_capabilities_v2="[cy8cproto_062_4343w]">
    <name>Pressure Sensor App using DPS310</name>
    <id>cce-mtb-psoc6-dps310</id>
    <category>Community Code Examples</category>
    <uri>https://github.com/Infineon/cce-mtb-psoc6-dps310</uri>
    <description><![CDATA[Disclaimer: This is a community code example (CCE) released for the benefit of the community users. These projects have only been tested for the listed BSPs, tools versions and toolchains documented in the Readme.<br><br>This example demonstrates how to interface the Infineon DPS310 pressure sensors evaluation board with PSoC6 MCU. The sensor-xensive-dps3xx library is used in this example for initializing and reading of temperature and pressure data from the DPS310 Barometric pressure sensor.
    <br><br>For more details, see the <a href="https://github.com/Infineon/cce-mtb-psoc6-dps310/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,LTE,Sequans,Modem,PPP,GM01Q,connectivity" req_capabilities_v2="[cy8ckit_062_wifi_bt]">
    <name>MQTT Client Over LTE</name>
    <id>cce-mtb-mqtt-client-over-lte</id>
    <category>Community Code Examples</category>
    <uri>https://github.com/Infineon/cce-mtb-mqtt-client-over-lte</uri>
    <description><![CDATA[Disclaimer: This is a community code example (CCE) released for the benefit of the community users. These projects have only been tested for the listed BSPs, tools versions and toolchains documented in the Readme.<br><br>This community code example (CCE) demonstrates the implementation of LTE CAT M1 connectivity to PSoC6 via Point-to-Point Protocol (PPP). This CCE demonstrates the steps to add LTE connectivity to any existing Wi-Fi based code example. mtb-example-anycloud-mqtt-client is taken as a reference here. GM01Q_Sequans Module is used for providing LTE connectivity for PSoC6 device. The MQTT Library and lwIP is hosted in PSoC6 and the GM01Q Module communicates to PSoC6 via PPP.In order to test this sample you need Monarch-GM01Q-EVK and one of the PSoC6 kits mentioned in Supported kit section.
    <br><br>For more details, see the <a href="https://github.com/Infineon/cce-mtb-mqtt-client-over-lte/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,lvd,mtb-flow" req_capabilities_v2="[cy8cproto_062_4343w]">
    <name>Low Voltage Detection</name>
    <id>cce-mtb-psoc6-lvd</id>
    <category>Community Code Examples</category>
    <uri>https://github.com/Infineon/cce-mtb-psoc6-lvd</uri>
    <description><![CDATA[Disclaimer: This is a community code example (CCE) released for the benefit of the community users. These projects have only been tested for the listed BSPs, tools versions and toolchains documented in the Readme.<br><br>This code example demonstrates how to configure a PSoC 6 Low Voltage Block to generate interrupt when the voltage level crosses the set threshold.
    <br><br>For more details, see the <a href="https://github.com/Infineon/cce-mtb-psoc6-lvd/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,fss,mtb-flow" req_capabilities_v2="[cy8ckit_149,cy8ckit_145_40xx]">
    <name>CapSense Flanking Sensor Suppression</name>
    <id>cce-mtb-psoc4-capsense-fss</id>
    <category>Community Code Examples</category>
    <uri>https://github.com/Infineon/cce-mtb-psoc4-capsense-fss</uri>
    <description><![CDATA[Disclaimer: This is a community code example (CCE) released for the benefit of the community users. These projects have only been tested for the listed BSPs, tools versions and toolchains documented in the Readme.<br><br>This code example implements Flanking Sensor Suppression (FSS) in PSoC&#8482; 4 devices. FSS eliminates false touches by distinguishing between signals from closely spaced buttons. In the project, three sensors have been used to demonstrate FSS. Whenever multiple sensors are touched, only the sensor whose touch was detected first remains active, and the other sensors are rendered inactive, i.e., their touch (if any) is rendered invalid until the sensor whose touch was detected first is active. This eliminates sensors, which are closely spaced, from being falsely triggered at the same time.
    <br><br>For more details, see the <a href="https://github.com/Infineon/cce-mtb-psoc4-capsense-fss/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc61,mcuboot,cce,bootloader" req_capabilities_v2="[cy8ckit_062s2_43012]">
    <name>MCUboot based Basic Bootloader for PSoC 61</name>
    <id>cce-mtb-psoc61-mcuboot-bootloader</id>
    <category>Community Code Examples</category>
    <uri>https://github.com/Infineon/cce-mtb-psoc61-mcuboot-bootloader</uri>
    <description><![CDATA[Disclaimer: This is a community code example (CCE) released for the benefit of the community users. These projects have only been tested for the listed BSPs, tools versions and toolchains documented in the Readme.<br><br>They are intended to demonstrate how a solution / concept / use-case can be achieved on a particular device.
      This community code example (CCE) demonstrates the implementation of MCUBoot based bootloader for PSoC&#8482; 61 MCU devices. This CCE is derived from mtb-example-psoc6-mcuboot-basic and PSoC61 support to run both Application and Bootloader from CM4 CPU is added.
      In order to test this sample you need target board with PSoC61. You can replace the PSoC6 IC on one of the PSoC&#8482; 6 development kits with PSoC&#8482; 61 MCU IC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/cce-mtb-psoc61-mcuboot-bootloader/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
</apps>
